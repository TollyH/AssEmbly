//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssEmbly.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings_Debugger {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings_Debugger() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssEmbly.Resources.Localization.Strings.Debugger", typeof(Strings_Debugger).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to continue, or CTRL+C to stop....
        /// </summary>
        internal static string Any_Key_Continue {
            get {
                return ResourceManager.GetString("Any_Key_Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint hit! {0} == {1}.
        /// </summary>
        internal static string Breakpoint_Hit {
            get {
                return ResourceManager.GetString("Breakpoint_Hit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current breakpoints:.
        /// </summary>
        internal static string Breakpoints_Header {
            get {
                return ResourceManager.GetString("Breakpoints_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Press ENTER to continue, or type a command (&apos;help&apos; for command list): .
        /// </summary>
        internal static string Command_Prompt {
            get {
                return ResourceManager.GetString("Command_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided debug information file was in an invalid format.
        /// </summary>
        internal static string DebugInfo_Error_Invalid_Format {
            get {
                return ResourceManager.GetString("DebugInfo_Error_Invalid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided debug information file was created for a different version of AssEmbly.
        /// </summary>
        internal static string DebugInfo_Error_Wrong_Version {
            get {
                return ResourceManager.GetString("DebugInfo_Error_Wrong_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires either 1 or no arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_0to1 {
            get {
                return ResourceManager.GetString("Error_Args_Required_0to1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 0 to 2 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_0to2 {
            get {
                return ResourceManager.GetString("Error_Args_Required_0to2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 1 argument. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_1 {
            get {
                return ResourceManager.GetString("Error_Args_Required_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 2 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_2 {
            get {
                return ResourceManager.GetString("Error_Args_Required_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 3 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_3 {
            get {
                return ResourceManager.GetString("Error_Args_Required_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires either 3 arguments to add or remove a breakpoint, or none to list them. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Args_Required_Breakpoint {
            get {
                return ResourceManager.GetString("Error_Args_Required_Breakpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid memory address. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Address {
            get {
                return ResourceManager.GetString("Error_Invalid_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value to break on..
        /// </summary>
        internal static string Error_Invalid_Break_Value {
            get {
                return ResourceManager.GetString("Error_Invalid_Break_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid breakpoint action. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Breakpoint_Action {
            get {
                return ResourceManager.GetString("Error_Invalid_Breakpoint_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid byte value for memory..
        /// </summary>
        internal static string Error_Invalid_Byte_Value {
            get {
                return ResourceManager.GetString("Error_Invalid_Byte_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value to convert..
        /// </summary>
        internal static string Error_Invalid_Convert_Value {
            get {
                return ResourceManager.GetString("Error_Invalid_Convert_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid limit. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Limit {
            get {
                return ResourceManager.GetString("Error_Invalid_Limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid location specifier. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Location {
            get {
                return ResourceManager.GetString("Error_Invalid_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid offset. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Offset {
            get {
                return ResourceManager.GetString("Error_Invalid_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid register. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Register {
            get {
                return ResourceManager.GetString("Error_Invalid_Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value for register..
        /// </summary>
        internal static string Error_Invalid_Register_Value {
            get {
                return ResourceManager.GetString("Error_Invalid_Register_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid size specifier. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Invalid_Size {
            get {
                return ResourceManager.GetString("Error_Invalid_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is outside the range of allowed memory addresses..
        /// </summary>
        internal static string Error_OutOfRange_Address {
            get {
                return ResourceManager.GetString("Error_OutOfRange_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a recognised command. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Error_Unrecognised_Command {
            get {
                return ResourceManager.GetString("Error_Unrecognised_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This instruction was assembled from {0} at line {1}.
        /// </summary>
        internal static string Execution_Position {
            get {
                return ResourceManager.GetString("Execution_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About to execute instruction:
        ///    .
        /// </summary>
        internal static string Execution_Preface_Header {
            get {
                return ResourceManager.GetString("Execution_Preface_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following file was imported here:
        ///    .
        /// </summary>
        internal static string Execution_Preface_Imports {
            get {
                return ResourceManager.GetString("Execution_Preface_Imports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This address is referenced by the following labels:
        ///    .
        /// </summary>
        internal static string Execution_Preface_Labels {
            get {
                return ResourceManager.GetString("Execution_Preface_Labels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  = Fully mapped, .
        /// </summary>
        internal static string Heap_Map_Fully_Mapped {
            get {
                return ResourceManager.GetString("Heap_Map_Fully_Mapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  = Fully unmapped, .
        /// </summary>
        internal static string Heap_Map_Fully_Unmapped {
            get {
                return ResourceManager.GetString("Heap_Map_Fully_Unmapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory map:.
        /// </summary>
        internal static string Heap_Map_Header {
            get {
                return ResourceManager.GetString("Heap_Map_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  = Partially mapped  (1 block = {0:N2} bytes).
        /// </summary>
        internal static string Heap_Map_Partially_Mapped {
            get {
                return ResourceManager.GetString("Heap_Map_Partially_Mapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Current memory statistics:
        ///Total memory: {0:N0} bytes
        ///Total free memory: {1:N0} bytes
        ///
        ///Number of free blocks: {2:N0}
        ///Largest free contiguous block: {3:N0} bytes ({4:N2}% fragmentation)
        ///
        ///Number of allocated blocks: {5:N0}
        ///Total size of allocated blocks: {6:N0} bytes
        ///
        ///Stack size: {7:N0} bytes{8}
        ///Program size: {9:N0} bytes.
        /// </summary>
        internal static string Heap_Stats_Main {
            get {
                return ResourceManager.GetString("Heap_Stats_Main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (unmapped).
        /// </summary>
        internal static string Heap_Unmapped {
            get {
                return ResourceManager.GetString("Heap_Unmapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///read &lt;byte|word|dword|qword&gt; &lt;address&gt; - Read data at a memory address
        ///write &lt;mem|reg&gt; &lt;address|register-name&gt; &lt;value&gt; - Modify the value of a memory address or register
        ///map [start offset] [limit] - Display (optionally limited amount) of memory in a grid of bytes
        ///stack [limit] - Visualise the state of the stack, optionally limited by the number of bytes away from the stack base
        ///heap - View statistics related to the current state of heap allocation
        ///breakpoint [&lt;add|remove&gt; &lt;register&gt; &lt;value&gt;] - Add or [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_Body {
            get {
                return ResourceManager.GetString("Help_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value at {0}: {1} (0x{2:X}) (0b{3}).
        /// </summary>
        internal static string Memory_Value {
            get {
                return ResourceManager.GetString("Memory_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X2}.
        /// </summary>
        internal static string MemoryMap_Cell {
            get {
                return ResourceManager.GetString("MemoryMap_Cell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X16} │ .
        /// </summary>
        internal static string MemoryMap_FirstCol {
            get {
                return ResourceManager.GetString("MemoryMap_FirstCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Offset (Hex)     │ 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F │ ASCII
        ///─────────────────┼─────────────────────────────────────────────────┼─────────────────
        ///.
        /// </summary>
        internal static string MemoryMap_Header {
            get {
                return ResourceManager.GetString("MemoryMap_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ .
        /// </summary>
        internal static string MemoryMap_VerticalSep {
            get {
                return ResourceManager.GetString("MemoryMap_VerticalSep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag changes:.
        /// </summary>
        internal static string REPL_Changed_Flags_Header {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET.
        /// </summary>
        internal static string REPL_Changed_Flags_Set {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UNSET.
        /// </summary>
        internal static string REPL_Changed_Flags_Unset {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Unset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Changed registers:.
        /// </summary>
        internal static string REPL_Changed_Registers_Header {
            get {
                return ResourceManager.GetString("REPL_Changed_Registers_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     {0}: {1} -&gt; {2} (0x{3:X} -&gt; 0x{4:X}).
        /// </summary>
        internal static string REPL_Changed_Registers_Line {
            get {
                return ResourceManager.GetString("REPL_Changed_Registers_Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&gt;&gt;&gt; .
        /// </summary>
        internal static string REPL_Command_Prompt {
            get {
                return ResourceManager.GetString("REPL_Command_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first character of a label cannot be &apos;&amp;&apos;.
        /// </summary>
        internal static string REPL_Error_Label_Ampersand {
            get {
                return ResourceManager.GetString("REPL_Error_Label_Ampersand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A label with the name &quot;{0}&quot; doesn&apos;t exist. Labels must be defined before usage in REPL..
        /// </summary>
        internal static string REPL_Error_Label_Not_Exists {
            get {
                return ResourceManager.GetString("REPL_Error_Label_Not_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssEmbly REPL Environment
        ///
        ///Type an AssEmbly instruction and press ENTER to insert and execute it.
        ///Preface the instruction with one or more spaces to insert it without executing it.
        ///Press ENTER without typing anything to output the state of all registers..
        /// </summary>
        internal static string REPL_Header {
            get {
                return ResourceManager.GetString("REPL_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0} bytes of memory remaining.
        /// </summary>
        internal static string REPL_Remaining_Memory {
            get {
                return ResourceManager.GetString("REPL_Remaining_Memory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to └──────────────────┴───────────────────────────────┴────────────┘.
        /// </summary>
        internal static string Stack_Box_Bottom {
            get {
                return ResourceManager.GetString("Stack_Box_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ┌──────────────────┬───────────────────────────────┬────────────┐.
        /// </summary>
        internal static string Stack_Box_Top {
            get {
                return ResourceManager.GetString("Stack_Box_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current stack frame (likely local variables).
        /// </summary>
        internal static string Stack_CurrentFrame_Header {
            get {
                return ResourceManager.GetString("Stack_CurrentFrame_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ {1:X16}              │ rsb - {2,-4} │.
        /// </summary>
        internal static string Stack_CurrentFrame_Row {
            get {
                return ResourceManager.GetString("Stack_CurrentFrame_Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent stack frame (possibly parameters to this subroutine).
        /// </summary>
        internal static string Stack_ParentFrame_Header {
            get {
                return ResourceManager.GetString("Stack_ParentFrame_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ {1:X16}              │ rsb + {2,-4} │.
        /// </summary>
        internal static string Stack_ParentFrame_Row {
            get {
                return ResourceManager.GetString("Stack_ParentFrame_Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;- rso.
        /// </summary>
        internal static string Stack_Pointer_rso {
            get {
                return ResourceManager.GetString("Stack_Pointer_rso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 0    | &lt;- rsb.
        /// </summary>
        internal static string Stack_ReturnInfo_First {
            get {
                return ResourceManager.GetString("Stack_ReturnInfo_First", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return information.
        /// </summary>
        internal static string Stack_ReturnInfo_Header {
            get {
                return ResourceManager.GetString("Stack_ReturnInfo_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 8    |.
        /// </summary>
        internal static string Stack_ReturnInfo_Second {
            get {
                return ResourceManager.GetString("Stack_ReturnInfo_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 16   |.
        /// </summary>
        internal static string Stack_ReturnInfo_Third {
            get {
                return ResourceManager.GetString("Stack_ReturnInfo_Third", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set value of address {0} to {1}.
        /// </summary>
        internal static string Success_Address_Value_Set {
            get {
                return ResourceManager.GetString("Success_Address_Value_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint added for {0} with value {1}.
        /// </summary>
        internal static string Success_Breakpoint {
            get {
                return ResourceManager.GetString("Success_Breakpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint removed for {0} with value {1}.
        /// </summary>
        internal static string Success_Breakpoint_Remove {
            get {
                return ResourceManager.GetString("Success_Breakpoint_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set value of register {0} to {1}.
        /// </summary>
        internal static string Success_Register_Value_Set {
            get {
                return ResourceManager.GetString("Success_Register_Value_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in decimal is {1}.
        /// </summary>
        internal static string Value_In_Decimal {
            get {
                return ResourceManager.GetString("Value_In_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in hexadecimal is {1:X}.
        /// </summary>
        internal static string Value_In_Hex {
            get {
                return ResourceManager.GetString("Value_In_Hex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a breakpoint added for {0} with value {1}..
        /// </summary>
        internal static string Warning_Breakpoint_Exists {
            get {
                return ResourceManager.GetString("Warning_Breakpoint_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were no matching breakpoints to remove..
        /// </summary>
        internal static string Warning_Breakpoint_No_Matching {
            get {
                return ResourceManager.GetString("Warning_Breakpoint_No_Matching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred whilst loading the debug information file:
        ///&quot;{0}: {1}&quot;.
        ///Label names and original source lines will not be available..
        /// </summary>
        internal static string Warning_Debug_Info_File {
            get {
                return ResourceManager.GetString("Warning_Debug_Info_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Halt instruction reached. You should not continue unless this instruction was placed as a breakpoint..
        /// </summary>
        internal static string Warning_HLT_Reached {
            get {
                return ResourceManager.GetString("Warning_HLT_Reached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack pointer is currently greater than the stack base - stack visualisation not available in this state..
        /// </summary>
        internal static string Warning_rso_GT_rsb {
            get {
                return ResourceManager.GetString("Warning_rso_GT_rsb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom of the stack reached - most likely the program is not currently in a subroutine..
        /// </summary>
        internal static string Warning_Stack_Bottom {
            get {
                return ResourceManager.GetString("Warning_Stack_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack is currently empty..
        /// </summary>
        internal static string Warning_Stack_Empty {
            get {
                return ResourceManager.GetString("Warning_Stack_Empty", resourceCulture);
            }
        }
    }
}
