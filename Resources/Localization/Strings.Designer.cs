//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssEmbly.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssEmbly.Resources.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given bytes do not start with the correct header.
        /// </summary>
        internal static string AAP_Error_Invalid_Bad_Header {
            get {
                return ResourceManager.GetString("AAP_Error_Invalid_Bad_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are not enough bytes in the given array to be a valid AAP file.
        /// </summary>
        internal static string AAP_Error_Invalid_Not_Enough_Bytes {
            get {
                return ResourceManager.GetString("AAP_Error_Invalid_Not_Enough_Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ANALYZER directive requires 3 operands. {0} were given..
        /// </summary>
        internal static string Assembler_Error_ANALYZER_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_ANALYZER_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand to the ANALYZER directive must be one of &apos;error&apos;, &apos;warning&apos; or &apos;suggestion&apos;..
        /// </summary>
        internal static string Assembler_Error_ANALYZER_Operand_First {
            get {
                return ResourceManager.GetString("Assembler_Error_ANALYZER_Operand_First", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The second operand to the ANALYZER directive must be an integer..
        /// </summary>
        internal static string Assembler_Error_ANALYZER_Operand_Second {
            get {
                return ResourceManager.GetString("Assembler_Error_ANALYZER_Operand_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The third operand to the ANALYZER directive must be one of &apos;0&apos;, &apos;1&apos;, or &apos;r&apos;..
        /// </summary>
        internal static string Assembler_Error_ANALYZER_Operand_Third {
            get {
                return ResourceManager.GetString("Assembler_Error_ANALYZER_Operand_Third", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character literals must contain at least 1 character.
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Character_Literal_Empty {
            get {
                return ResourceManager.GetString("Assembler_Error_Character_Literal_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character literals may only contain a single character. Did you mean to use double quotes for a string literal?
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Character_Literal_Too_Long {
            get {
                return ResourceManager.GetString("Assembler_Error_Character_Literal_Too_Long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular import detected: attempted import from &quot;{0}&quot; when it is already in import stack..
        /// </summary>
        internal static string Assembler_Error_Circular_Import {
            get {
                return ResourceManager.GetString("Assembler_Error_Circular_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DAT mnemonic requires a single operand. {0} were given..
        /// </summary>
        internal static string Assembler_Error_DAT_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_DAT_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The literal operand to the DAT mnemonic cannot be a label reference..
        /// </summary>
        internal static string Assembler_Error_DAT_Operand_Label_Reference {
            get {
                return ResourceManager.GetString("Assembler_Error_DAT_Operand_Label_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric literal too large for DAT, or is negative/floating point. 255 is the maximum value:
        ///    {0}.
        /// </summary>
        internal static string Assembler_Error_DAT_Operand_Too_Large {
            get {
                return ResourceManager.GetString("Assembler_Error_DAT_Operand_Too_Large", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand to the DAT mnemonic must be a literal. An operand of type {0} was provided..
        /// </summary>
        internal static string Assembler_Error_DAT_Operand_Type {
            get {
                return ResourceManager.GetString("Assembler_Error_DAT_Operand_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operands cannot be empty:
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Empty_Operand {
            get {
                return ResourceManager.GetString("Assembler_Error_Empty_Operand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating point numeric literals must contain a digit on at least one side of the decimal point..
        /// </summary>
        internal static string Assembler_Error_Floating_Point_Decimal_Only {
            get {
                return ResourceManager.GetString("Assembler_Error_Floating_Point_Decimal_Only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &quot;{0}&quot; given to the IMP mnemonic could not be found..
        /// </summary>
        internal static string Assembler_Error_IMP_File_Not_Exists {
            get {
                return ResourceManager.GetString("Assembler_Error_IMP_File_Not_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IMP mnemonic requires a single operand. {0} were given..
        /// </summary>
        internal static string Assembler_Error_IMP_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_IMP_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The literal operand to the IMP mnemonic must be a string..
        /// </summary>
        internal static string Assembler_Error_IMP_Operand_String {
            get {
                return ResourceManager.GetString("Assembler_Error_IMP_Operand_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand to the IMP mnemonic must be a literal. An operand of type {0} was provided..
        /// </summary>
        internal static string Assembler_Error_IMP_Operand_Type {
            get {
                return ResourceManager.GetString("Assembler_Error_IMP_Operand_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognised escape character &apos;{0}&apos;. Did you forget to escape the backslash?
        ///    {1}
        ///    {2}^.
        /// </summary>
        internal static string Assembler_Error_Invalid_Escape_Sequence {
            get {
                return ResourceManager.GetString("Assembler_Error_Invalid_Escape_Sequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert a label definition to a literal address. Are you sure you meant to include the &apos;&amp;&apos;?
        ///    {0}
        ///     ^.
        /// </summary>
        internal static string Assembler_Error_Invalid_Literal_Label {
            get {
                return ResourceManager.GetString("Assembler_Error_Invalid_Literal_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognised mnemonic and operand combination:
        ///    {0} {1}
        ///Consult the language reference for a list of all valid mnemonic/operand combinations..
        /// </summary>
        internal static string Assembler_Error_Invalid_Mnemonic_Combo {
            get {
                return ResourceManager.GetString("Assembler_Error_Invalid_Mnemonic_Combo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Label &quot;{0}&quot; has already been defined. Label names must be unique..
        /// </summary>
        internal static string Assembler_Error_Label_Already_Defined {
            get {
                return ResourceManager.GetString("Assembler_Error_Label_Already_Defined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character in label:
        ///    {0}
        ///    {1}^
        ///Label names may not contain symbols other than underscores, and cannot start with a numeral..
        /// </summary>
        internal static string Assembler_Error_Label_Invalid_Character {
            get {
                return ResourceManager.GetString("Assembler_Error_Label_Invalid_Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A label with the name &quot;{0}&quot; does not exist, but a reference was made to it. Have you missed a definition?.
        /// </summary>
        internal static string Assembler_Error_Label_Not_Exists {
            get {
                return ResourceManager.GetString("Assembler_Error_Label_Not_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MAC mnemonic requires two operands. {0} were given..
        /// </summary>
        internal static string Assembler_Error_MAC_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_MAC_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on line {0} in base file
        ///    &quot;{1}&quot;
        ///{2}.
        /// </summary>
        internal static string Assembler_Error_Message_Base_File {
            get {
                return ResourceManager.GetString("Assembler_Error_Message_Base_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on line {0} in &quot;{1}&quot;
        ///    &quot;{2}&quot;.
        /// </summary>
        internal static string Assembler_Error_Message_Imported {
            get {
                return ResourceManager.GetString("Assembler_Error_Message_Imported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Imported on line {0} of base file
        ///
        ///{1}.
        /// </summary>
        internal static string Assembler_Error_Message_Imported_Base {
            get {
                return ResourceManager.GetString("Assembler_Error_Message_Imported_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Imported on line {0} of &quot;{1}&quot;.
        /// </summary>
        internal static string Assembler_Error_Message_Imported_Import {
            get {
                return ResourceManager.GetString("Assembler_Error_Message_Imported_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mnemonics should be separated from operands with spaces, not commas:
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Mnemonic_Operand_Space {
            get {
                return ResourceManager.GetString("Assembler_Error_Mnemonic_Operand_Space", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NUM mnemonic requires a single operand. {0} were given..
        /// </summary>
        internal static string Assembler_Error_NUM_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_NUM_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The literal operand to the NUM mnemonic cannot be a label reference..
        /// </summary>
        internal static string Assembler_Error_NUM_Operand_Label_Reference {
            get {
                return ResourceManager.GetString("Assembler_Error_NUM_Operand_Label_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand to the NUM mnemonic must be a literal. An operand of type {0} was provided..
        /// </summary>
        internal static string Assembler_Error_NUM_Operand_Type {
            get {
                return ResourceManager.GetString("Assembler_Error_NUM_Operand_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character in numeric literal:
        ///    {0}
        ///    {1}^
        ///Did you forget a &apos;0x&apos; prefix before a hexadecimal number or put a digit other than 1 or 0 in a binary number?.
        /// </summary>
        internal static string Assembler_Error_Numeric_Invalid_Character {
            get {
                return ResourceManager.GetString("Assembler_Error_Numeric_Invalid_Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric literal contains more than one decimal point:
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Numeric_Too_Many_Points {
            get {
                return ResourceManager.GetString("Assembler_Error_Numeric_Too_Many_Points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on line {0} in {1}
        ///
        ///{2}.
        /// </summary>
        internal static string Assembler_Error_On_Line {
            get {
                return ResourceManager.GetString("Assembler_Error_On_Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of operand &quot;{0}&quot; could not be determined. Did you forget a colon before a label name or misspell a register name?.
        /// </summary>
        internal static string Assembler_Error_Operand_Invalid {
            get {
                return ResourceManager.GetString("Assembler_Error_Operand_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operands cannot contain whitespace. Did you forget a comma?
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Operand_Whitespace {
            get {
                return ResourceManager.GetString("Assembler_Error_Operand_Whitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PAD mnemonic requires a single operand. {0} were given..
        /// </summary>
        internal static string Assembler_Error_PAD_Operand_Count {
            get {
                return ResourceManager.GetString("Assembler_Error_PAD_Operand_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The literal operand to the PAD mnemonic cannot be a label reference..
        /// </summary>
        internal static string Assembler_Error_PAD_Operand_Label_Reference {
            get {
                return ResourceManager.GetString("Assembler_Error_PAD_Operand_Label_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand to the PAD mnemonic must be a literal. An operand of type {0} was provided..
        /// </summary>
        internal static string Assembler_Error_PAD_Operand_Type {
            get {
                return ResourceManager.GetString("Assembler_Error_PAD_Operand_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of line found while processing quoted literal. Did you forget a closing quote?
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Quoted_Literal_EndOfLine {
            get {
                return ResourceManager.GetString("Assembler_Error_Quoted_Literal_EndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-whitespace characters found after quoted literal. Did you forget a comma?
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Quoted_Literal_Followed {
            get {
                return ResourceManager.GetString("Assembler_Error_Quoted_Literal_Followed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quoted literal defined after non-whitespace characters. Did you forget a comma?:
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Quoted_Literal_Following {
            get {
                return ResourceManager.GetString("Assembler_Error_Quoted_Literal_Following", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String literal contains characters after closing quote mark..
        /// </summary>
        internal static string Assembler_Error_String_Followed_Internal {
            get {
                return ResourceManager.GetString("Assembler_Error_String_Followed_Internal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string literal is not a valid operand in this context..
        /// </summary>
        internal static string Assembler_Error_String_Not_Allowed {
            get {
                return ResourceManager.GetString("Assembler_Error_String_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unicode escape must be immediately followed a 4 digit unicode codepoint
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Unicode_Escape_4_Digits {
            get {
                return ResourceManager.GetString("Assembler_Error_Unicode_Escape_4_Digits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unicode escape must be immediately followed a valid 8 digit unicode codepoint (0x00000000 - 0x0010ffff excluding 0x0000d800 - 0x0000dfff)
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Unicode_Escape_8_Digits {
            get {
                return ResourceManager.GetString("Assembler_Error_Unicode_Escape_8_Digits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of line reached when processing unicode escape
        ///    {0}
        ///    {1}^.
        /// </summary>
        internal static string Assembler_Error_Unicode_Escape_EndOfLine {
            get {
                return ResourceManager.GetString("Assembler_Error_Unicode_Escape_EndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction writes to the rpo register..
        /// </summary>
        internal static string AssemblerWarnings_NonFatal_0001 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_NonFatal_0001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by constant 0..
        /// </summary>
        internal static string AssemblerWarnings_NonFatal_0002 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_NonFatal_0002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File has an entry point explicitly defined, but the program is being assembled into v1 format which doesn&apos;t support them..
        /// </summary>
        internal static string AssemblerWarnings_NonFatal_0003 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_NonFatal_0003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid use of NOP instruction..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0001 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the `PAD` directive instead of chaining `DAT 0` directives..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0002 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put IMP directives at the end of the file, unless the position of the directive is important given the file&apos;s contents..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0003 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put data at the end of the file, unless the position of the data is important..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0004 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `TST {1}, {1}` instead of `CMP {1}, 0`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0005 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `XOR {1}, {1}` instead of `{0} {1}, 0`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0006 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `ICR {1}` instead of `ADD {1}, 1`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0007 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `DCR {1}` instead of `SUB {1}, 1`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0008 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation has no effect..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0009 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift operation shifts by 64 bits or more, which will always shift out all bits..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0010 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove leading 0 digits from denary number..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0011 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove useless `PAD 0` directive..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0012 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `DCR {1}` instead of `ADD {1}, -1`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0013 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `ICR {1}` instead of `SUB {1}, -1`, as it results in less bytes..
        /// </summary>
        internal static string AssemblerWarnings_Suggestion_0014 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Suggestion_0014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data insertion is not directly preceded by an unconditional jump, return, or halt instruction..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0001 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump/Call target label points to data, not executable code..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0002 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump/Call target label points to end of file, not executable code..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0003 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction writes to a label pointing to executable code..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0004 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction reads from a label pointing to executable code in a context that likely expects data..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0005 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String insertion is not immediately followed by a 0 (null) byte..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0006 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric literal is too large for the given move instruction. Upper bits will be truncated at runtime..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0007 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable code detected..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0008 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program runs to end of file without being terminated by an unconditional jump, return, or halt instruction..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0009 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File import is not directly preceded by an unconditional jump, return, or halt instruction..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0010 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction writes to the rsf register..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0011 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction writes to the rsb register..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0012 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump/Call target label points to itself, resulting in an unbreakable infinite loop..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0013 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlabelled executable code found after data insertion..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0014 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code follows an imported file that is not terminated by unconditional jump, return, or halt instruction..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0015 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addresses are 64-bit values, however this move instruction moves less than 64 bits..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0016 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry point points to data, not executable code..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0017 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry point points to an import..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0018 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed literal given to an instruction that expects an unsigned literal..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0019 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating point literal given to an instruction that expects an integer literal..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0020 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integer literal given to an instruction that expects a floating point literal. Put `.0` at the end of the literal to make it floating point..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0021 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is too large for a signed instruction. This positive value will overflow into a negative one..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0022 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addresses are unsigned, however this operation is signed..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0023 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addresses are integers, however this operation is floating point..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0024 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0024", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of an extension instruction when assembling to v1 format..
        /// </summary>
        internal static string AssemblerWarnings_Warning_0025 {
            get {
                return ResourceManager.GetString("AssemblerWarnings_Warning_0025", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid error code to disable..
        /// </summary>
        internal static string CLI_Assemble_Error_Invalid_Error_Code {
            get {
                return ResourceManager.GetString("CLI_Assemble_Error_Invalid_Error_Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid suggestion code to disable..
        /// </summary>
        internal static string CLI_Assemble_Error_Invalid_Suggestion_Code {
            get {
                return ResourceManager.GetString("CLI_Assemble_Error_Invalid_Suggestion_Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid warning code to disable..
        /// </summary>
        internal static string CLI_Assemble_Error_Invalid_Warning_Code {
            get {
                return ResourceManager.GetString("CLI_Assemble_Error_Invalid_Warning_Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0} {1:D4} on line {2} in {3}
        ///    {4}
        ///{5}.
        /// </summary>
        internal static string CLI_Assemble_Error_Warning_Printout {
            get {
                return ResourceManager.GetString("CLI_Assemble_Error_Warning_Printout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program assembled into {0} bytes successfully. It can be found at: &quot;{1}&quot;.
        /// </summary>
        internal static string CLI_Assemble_Success {
            get {
                return ResourceManager.GetString("CLI_Assemble_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred during disassembly:
        ///    {0}: {1}.
        /// </summary>
        internal static string CLI_Disassemble_Error_Unexpected {
            get {
                return ResourceManager.GetString("CLI_Disassemble_Error_Unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program disassembled successfully. It can be found at: &quot;{0}&quot;.
        /// </summary>
        internal static string CLI_Disassemble_Success {
            get {
                return ResourceManager.GetString("CLI_Disassemble_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program uses features incompatible with the current version of AssEmbly..
        /// </summary>
        internal static string CLI_Error_AAP_Feature_Incompatible {
            get {
                return ResourceManager.GetString("CLI_Error_AAP_Feature_Incompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path to the program listing to be assembled is required..
        /// </summary>
        internal static string CLI_Error_Argument_Missing_Path_Assemble {
            get {
                return ResourceManager.GetString("CLI_Error_Argument_Missing_Path_Assemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path to the program listing to be executed is required..
        /// </summary>
        internal static string CLI_Error_Argument_Missing_Path_AssembleAndExecute {
            get {
                return ResourceManager.GetString("CLI_Error_Argument_Missing_Path_AssembleAndExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path to the assembled program to be debugged is required..
        /// </summary>
        internal static string CLI_Error_Argument_Missing_Path_Debugger {
            get {
                return ResourceManager.GetString("CLI_Error_Argument_Missing_Path_Debugger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path to the program to be disassembled is required..
        /// </summary>
        internal static string CLI_Error_Argument_Missing_Path_Disassemble {
            get {
                return ResourceManager.GetString("CLI_Error_Argument_Missing_Path_Disassemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A path to the assembled program to be executed is required..
        /// </summary>
        internal static string CLI_Error_Argument_Missing_Path_Execute {
            get {
                return ResourceManager.GetString("CLI_Error_Argument_Missing_Path_Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file does not exist..
        /// </summary>
        internal static string CLI_Error_File_Not_Exists {
            get {
                return ResourceManager.GetString("CLI_Error_File_Not_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given executable file is invalid. Make sure you&apos;re not attempting to load the source file instead of the executable. To run an executable built in AssEmbly v1.x.x, use the --v1-format parameter..
        /// </summary>
        internal static string CLI_Error_Invalid_AAP {
            get {
                return ResourceManager.GetString("CLI_Error_Invalid_AAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid number of bytes for memory size..
        /// </summary>
        internal static string CLI_Error_Invalid_Memory_Size {
            get {
                return ResourceManager.GetString("CLI_Error_Invalid_Memory_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid operation..
        /// </summary>
        internal static string CLI_Error_Invalid_Operation {
            get {
                return ResourceManager.GetString("CLI_Error_Invalid_Operation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation to perform is required. Run the &apos;help&apos; operation for information on available operations..
        /// </summary>
        internal static string CLI_Error_Missing_Operation_Body {
            get {
                return ResourceManager.GetString("CLI_Error_Missing_Operation_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to i.e. &apos;AssEmbly help&apos;.
        /// </summary>
        internal static string CLI_Error_Missing_Operation_Hint {
            get {
                return ResourceManager.GetString("CLI_Error_Missing_Operation_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because the major release number is higher ({0} &gt; {1}), this program will not be executed. Use the --ignore-newer-version parameter to override this..
        /// </summary>
        internal static string CLI_Error_Newer_Major_Build_Version {
            get {
                return ResourceManager.GetString("CLI_Error_Newer_Major_Build_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred while loading your program:
        ///    {0}: {1}.
        /// </summary>
        internal static string CLI_Error_Program_Load_Unexpected {
            get {
                return ResourceManager.GetString("CLI_Error_Program_Load_Unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instruction tried to access an invalid memory address..
        /// </summary>
        internal static string CLI_Error_Runtime_Invalid_Address {
            get {
                return ResourceManager.GetString("CLI_Error_Runtime_Invalid_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///An error occurred executing your program:
        ///    {0}.
        /// </summary>
        internal static string CLI_Error_Runtime_Known {
            get {
                return ResourceManager.GetString("CLI_Error_Runtime_Known", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instruction attempted to divide by zero..
        /// </summary>
        internal static string CLI_Error_Runtime_Zero_Divide {
            get {
                return ResourceManager.GetString("CLI_Error_Runtime_Zero_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred:
        ///    {0}: {1}.
        /// </summary>
        internal static string CLI_Error_Unexpected_With_Type {
            get {
                return ResourceManager.GetString("CLI_Error_Unexpected_With_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: &apos;AssEmbly &lt;operation&gt; &lt;required-parameters (if any)&gt; [optional-parameters]&apos;
        ///Any command can take the &apos;--no-header&apos; optional parameter to disable the copyright printout.
        ///Using the &apos;--version&apos; optional parameter will print just the current version of AssEmbly then exit, regardless of other parameters.
        ///
        ///Operations:
        ///assemble - Take a source file written in AssEmbly and assemble it in to an executable file
        ///    Usage: &apos;AssEmbly assemble &lt;file-path&gt; [destination-path] [options]&apos;
        ///    --no-debug-file - [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CLI_Help_Body {
            get {
                return ResourceManager.GetString("CLI_Help_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: This program was assembled for a newer version of AssEmbly. It was built for version {0}.{1}.{2} - you have version {3}.{4}.{5}..
        /// </summary>
        internal static string CLI_Warning_Newer_Build_Version {
            get {
                return ResourceManager.GetString("CLI_Warning_Newer_Build_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to continue, or CTRL+C to stop....
        /// </summary>
        internal static string Debugger_Any_Key_Continue {
            get {
                return ResourceManager.GetString("Debugger_Any_Key_Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint hit! {0} == {1}.
        /// </summary>
        internal static string Debugger_Breakpoint_Hit {
            get {
                return ResourceManager.GetString("Debugger_Breakpoint_Hit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current breakpoints:.
        /// </summary>
        internal static string Debugger_Breakpoints_Header {
            get {
                return ResourceManager.GetString("Debugger_Breakpoints_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Press ENTER to continue, or type a command (&apos;help&apos; for command list): .
        /// </summary>
        internal static string Debugger_Command_Prompt {
            get {
                return ResourceManager.GetString("Debugger_Command_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires either 1 or no arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_0to1 {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_0to1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 0 to 2 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_0to2 {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_0to2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 1 argument. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_1 {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 2 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_2 {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires 3 arguments. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_3 {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command requires either 3 arguments to add or remove a breakpoint, or none to list them. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Args_Required_Breakpoint {
            get {
                return ResourceManager.GetString("Debugger_Error_Args_Required_Breakpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid memory address. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Address {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value to break on..
        /// </summary>
        internal static string Debugger_Error_Invalid_Break_Value {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Break_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid breakpoint action. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Breakpoint_Action {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Breakpoint_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid byte value for memory..
        /// </summary>
        internal static string Debugger_Error_Invalid_Byte_Value {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Byte_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value to convert..
        /// </summary>
        internal static string Debugger_Error_Invalid_Convert_Value {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Convert_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid limit. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Limit {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid location specifier. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Location {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid offset. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Offset {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid register. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Register {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid value for register..
        /// </summary>
        internal static string Debugger_Error_Invalid_Register_Value {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Register_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid size specifier. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Invalid_Size {
            get {
                return ResourceManager.GetString("Debugger_Error_Invalid_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is outside the range of allowed memory addresses..
        /// </summary>
        internal static string Debugger_Error_OutOfRange_Address {
            get {
                return ResourceManager.GetString("Debugger_Error_OutOfRange_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a recognised command. Run &apos;help&apos; for more info..
        /// </summary>
        internal static string Debugger_Error_Unrecognised_Command {
            get {
                return ResourceManager.GetString("Debugger_Error_Unrecognised_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///About to execute instruction:
        ///    .
        /// </summary>
        internal static string Debugger_Execution_Preface_Header {
            get {
                return ResourceManager.GetString("Debugger_Execution_Preface_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following file was imported here:
        ///    .
        /// </summary>
        internal static string Debugger_Execution_Preface_Imports {
            get {
                return ResourceManager.GetString("Debugger_Execution_Preface_Imports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This address is referenced by the following labels:
        ///    .
        /// </summary>
        internal static string Debugger_Execution_Preface_Labels {
            get {
                return ResourceManager.GetString("Debugger_Execution_Preface_Labels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///read &lt;byte|word|dword|qword&gt; &lt;address&gt; - Read data at a memory address
        ///write &lt;mem|reg&gt; &lt;address|register-name&gt; &lt;value&gt; - Modify the value of a memory address or register
        ///map [start offset] [limit] - Display (optionally limited amount) of memory in a grid of bytes
        ///stack [limit] - Visualise the state of the stack, optionally limited by the number of bytes away from the stack base
        ///breakpoint [&lt;add|remove&gt; &lt;register&gt; &lt;value&gt;] - Add or remove a breakpoint for when a register is equal to a value
        ///dec2hex &lt;d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Debugger_Help_Body {
            get {
                return ResourceManager.GetString("Debugger_Help_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value at {0}: {1} (0x{2:X}) (0b{3}).
        /// </summary>
        internal static string Debugger_Memory_Value {
            get {
                return ResourceManager.GetString("Debugger_Memory_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  {0:X2}.
        /// </summary>
        internal static string Debugger_MemoryMap_Cell {
            get {
                return ResourceManager.GetString("Debugger_MemoryMap_Cell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0:X16} │.
        /// </summary>
        internal static string Debugger_MemoryMap_FirstCol {
            get {
                return ResourceManager.GetString("Debugger_MemoryMap_FirstCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset (Hex)     │ 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
        ///─────────────────┼────────────────────────────────────────────────.
        /// </summary>
        internal static string Debugger_MemoryMap_Header {
            get {
                return ResourceManager.GetString("Debugger_MemoryMap_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to └──────────────────┴───────────────────────────────┴────────────┘.
        /// </summary>
        internal static string Debugger_Stack_Box_Bottom {
            get {
                return ResourceManager.GetString("Debugger_Stack_Box_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ┌──────────────────┬───────────────────────────────┬────────────┐.
        /// </summary>
        internal static string Debugger_Stack_Box_Top {
            get {
                return ResourceManager.GetString("Debugger_Stack_Box_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current stack frame (likely local variables).
        /// </summary>
        internal static string Debugger_Stack_CurrentFrame_Header {
            get {
                return ResourceManager.GetString("Debugger_Stack_CurrentFrame_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ {1:X16}              │ rsb - {2,-4} │.
        /// </summary>
        internal static string Debugger_Stack_CurrentFrame_Row {
            get {
                return ResourceManager.GetString("Debugger_Stack_CurrentFrame_Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent stack frame (possibly parameters to this subroutine).
        /// </summary>
        internal static string Debugger_Stack_ParentFrame_Header {
            get {
                return ResourceManager.GetString("Debugger_Stack_ParentFrame_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ {1:X16}              │ rsb + {2,-4} │.
        /// </summary>
        internal static string Debugger_Stack_ParentFrame_Row {
            get {
                return ResourceManager.GetString("Debugger_Stack_ParentFrame_Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;- rsp.
        /// </summary>
        internal static string Debugger_Stack_Pointer_rsp {
            get {
                return ResourceManager.GetString("Debugger_Stack_Pointer_rsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 0    | &lt;- rsb.
        /// </summary>
        internal static string Debugger_Stack_ReturnInfo_First {
            get {
                return ResourceManager.GetString("Debugger_Stack_ReturnInfo_First", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return information.
        /// </summary>
        internal static string Debugger_Stack_ReturnInfo_Header {
            get {
                return ResourceManager.GetString("Debugger_Stack_ReturnInfo_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 8    |.
        /// </summary>
        internal static string Debugger_Stack_ReturnInfo_Second {
            get {
                return ResourceManager.GetString("Debugger_Stack_ReturnInfo_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to │ {0:X16} │ Reset {1} to {2:X16} | rsb + 16   |.
        /// </summary>
        internal static string Debugger_Stack_ReturnInfo_Third {
            get {
                return ResourceManager.GetString("Debugger_Stack_ReturnInfo_Third", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set value of address {0} to {1}.
        /// </summary>
        internal static string Debugger_Success_Address_Value_Set {
            get {
                return ResourceManager.GetString("Debugger_Success_Address_Value_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint added for {0} with value {1}.
        /// </summary>
        internal static string Debugger_Success_Breakpoint {
            get {
                return ResourceManager.GetString("Debugger_Success_Breakpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breakpoint removed for {0} with value {1}.
        /// </summary>
        internal static string Debugger_Success_Breakpoint_Remove {
            get {
                return ResourceManager.GetString("Debugger_Success_Breakpoint_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set value of register {0} to {1}.
        /// </summary>
        internal static string Debugger_Success_Register_Value_Set {
            get {
                return ResourceManager.GetString("Debugger_Success_Register_Value_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in decimal is {1}.
        /// </summary>
        internal static string Debugger_Value_In_Decimal {
            get {
                return ResourceManager.GetString("Debugger_Value_In_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in hexadecimal is {1:X}.
        /// </summary>
        internal static string Debugger_Value_In_Hex {
            get {
                return ResourceManager.GetString("Debugger_Value_In_Hex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a breakpoint added for {0} with value {1}..
        /// </summary>
        internal static string Debugger_Warning_Breakpoint_Exists {
            get {
                return ResourceManager.GetString("Debugger_Warning_Breakpoint_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were no matching breakpoints to remove..
        /// </summary>
        internal static string Debugger_Warning_Breakpoint_No_Matching {
            get {
                return ResourceManager.GetString("Debugger_Warning_Breakpoint_No_Matching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred whilst loading the debug information file:
        ///&quot;{0}: {1}&quot;.
        ///Label names and original source lines will not be available..
        /// </summary>
        internal static string Debugger_Warning_Debug_Info_File {
            get {
                return ResourceManager.GetString("Debugger_Warning_Debug_Info_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Halt instruction reached. You should not continue unless this instruction was placed as a breakpoint..
        /// </summary>
        internal static string Debugger_Warning_HLT_Reached {
            get {
                return ResourceManager.GetString("Debugger_Warning_HLT_Reached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack pointer is currently greater than the stack base - stack visualisation not available in this state..
        /// </summary>
        internal static string Debugger_Warning_rso_GT_rsb {
            get {
                return ResourceManager.GetString("Debugger_Warning_rso_GT_rsb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom of the stack reached - most likely the program is not currently in a subroutine..
        /// </summary>
        internal static string Debugger_Warning_Stack_Bottom {
            get {
                return ResourceManager.GetString("Debugger_Warning_Stack_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack is currently empty..
        /// </summary>
        internal static string Debugger_Warning_Stack_Empty {
            get {
                return ResourceManager.GetString("Debugger_Warning_Stack_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided debug information file was in an invalid format.
        /// </summary>
        internal static string DebugInfo_Error_Invalid_Format {
            get {
                return ResourceManager.GetString("DebugInfo_Error_Invalid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided debug information file was created for a different version of AssEmbly.
        /// </summary>
        internal static string DebugInfo_Error_Wrong_Version {
            get {
                return ResourceManager.GetString("DebugInfo_Error_Wrong_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to base file.
        /// </summary>
        internal static string Generic_Base_File {
            get {
                return ResourceManager.GetString("Generic_Base_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , .
        /// </summary>
        internal static string Generic_CommaSeparate {
            get {
                return ResourceManager.GetString("Generic_CommaSeparate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///.
        /// </summary>
        internal static string Generic_Double_Newline {
            get {
                return ResourceManager.GetString("Generic_Double_Newline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flags:.
        /// </summary>
        internal static string Generic_Flags_Header {
            get {
                return ResourceManager.GetString("Generic_Flags_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X}.
        /// </summary>
        internal static string Generic_Hex_Value {
            get {
                return ResourceManager.GetString("Generic_Hex_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     {0}: {1}.
        /// </summary>
        internal static string Generic_Indented_Key_Value {
            get {
                return ResourceManager.GetString("Generic_Indented_Key_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string Generic_Key_Value {
            get {
                return ResourceManager.GetString("Generic_Key_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (0b{0}).
        /// </summary>
        internal static string Generic_Register_Binary_Value {
            get {
                return ResourceManager.GetString("Generic_Register_Binary_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (&apos;{0}&apos;).
        /// </summary>
        internal static string Generic_Register_Char_Value {
            get {
                return ResourceManager.GetString("Generic_Register_Char_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ({0}).
        /// </summary>
        internal static string Generic_Register_Denary_Value {
            get {
                return ResourceManager.GetString("Generic_Register_Denary_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ({0:0.0###############}).
        /// </summary>
        internal static string Generic_Register_Floating_Value {
            get {
                return ResourceManager.GetString("Generic_Register_Floating_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (0x{0:X}).
        /// </summary>
        internal static string Generic_Register_Hex_Value {
            get {
                return ResourceManager.GetString("Generic_Register_Hex_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rpo.
        /// </summary>
        internal static string Generic_Register_rpo {
            get {
                return ResourceManager.GetString("Generic_Register_rpo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rsb.
        /// </summary>
        internal static string Generic_Register_rsb {
            get {
                return ResourceManager.GetString("Generic_Register_rsb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rso.
        /// </summary>
        internal static string Generic_Register_rso {
            get {
                return ResourceManager.GetString("Generic_Register_rso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register states:.
        /// </summary>
        internal static string Generic_Register_States_Header {
            get {
                return ResourceManager.GetString("Generic_Register_States_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Generic_Severity_Error {
            get {
                return ResourceManager.GetString("Generic_Severity_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suggestion.
        /// </summary>
        internal static string Generic_Severity_Suggestion {
            get {
                return ResourceManager.GetString("Generic_Severity_Suggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string Generic_Severity_Warning {
            get {
                return ResourceManager.GetString("Generic_Severity_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  {0}.
        /// </summary>
        internal static string Generic_Single_Indent {
            get {
                return ResourceManager.GetString("Generic_Single_Indent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  {0}:{1}.
        /// </summary>
        internal static string Generic_Single_Indented_Key_Value {
            get {
                return ResourceManager.GetString("Generic_Single_Indented_Key_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string Generic_Unknown {
            get {
                return ResourceManager.GetString("Generic_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute open file instruction if a file is already open.
        /// </summary>
        internal static string Processor_Error_File_Already_Open {
            get {
                return ResourceManager.GetString("Processor_Error_File_Already_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute close file instruction if a file is not open.
        /// </summary>
        internal static string Processor_Error_File_Close_None_Open {
            get {
                return ResourceManager.GetString("Processor_Error_File_Close_None_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform file operations if no file is open. Run OFL (0xE0) first.
        /// </summary>
        internal static string Processor_Error_File_No_Open {
            get {
                return ResourceManager.GetString("Processor_Error_File_No_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute file read instruction. The end of the file has already been reached..
        /// </summary>
        internal static string Processor_Error_File_Read_End_Reached {
            get {
                return ResourceManager.GetString("Processor_Error_File_Read_End_Reached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute file read instruction if a file is not open.
        /// </summary>
        internal static string Processor_Error_File_Read_No_Open {
            get {
                return ResourceManager.GetString("Processor_Error_File_Read_No_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised extension set.
        /// </summary>
        internal static string Processor_Error_Opcode_Extension_Set {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Extension_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised high opcode for the base instruction set.
        /// </summary>
        internal static string Processor_Error_Opcode_High_Base {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_High_Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised high opcode for the extended base set.
        /// </summary>
        internal static string Processor_Error_Opcode_High_Extended {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_High_Extended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised high opcode for the floating point extension set.
        /// </summary>
        internal static string Processor_Error_Opcode_High_FloatingPoint {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_High_FloatingPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised high opcode for the signed extension set.
        /// </summary>
        internal static string Processor_Error_Opcode_High_Signed {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_High_Signed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set addition low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Addition {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Addition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set bitwise low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Bitwise {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Bitwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set comparison low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Comparison {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Comparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set console write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_ConsoleWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_ConsoleWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set control low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Control {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Control", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set division low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Division {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Division", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set file operation low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_FileOperation {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_FileOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set file write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_FileWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_FileWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set large move low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_LargeMove {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_LargeMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set multiplication low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Multiplication {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Multiplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set reading low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Reading {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set shifting low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Shifting {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Shifting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set small move low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_SmallMove {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_SmallMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set stack low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Stack {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Stack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set subroutine low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Subroutine {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Subroutine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised base instruction set subtraction low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Base_Subtraction {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Base_Subtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised extended base set byte swap low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Extended_ByteSwap {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Extended_ByteSwap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set addition low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Addition {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Addition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set comparison low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Comparison {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Comparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set console write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_ConsoleWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_ConsoleWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set division low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Division {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Division", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set exponentiation low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Exponentiation {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Exponentiation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set file write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_FileWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_FileWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set float to int low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_FloatToInt {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_FloatToInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set int to float low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_IntToFloat {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_IntToFloat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set logarithm low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Logarithm {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Logarithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set multiplication low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Multiplication {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Multiplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set negate low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Negate {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set size conversion low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_SizeConversion {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_SizeConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set subtraction low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Subtraction {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Subtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised floating point extension set trigonometry low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_FloatingPoint_Trigonometry {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_FloatingPoint_Trigonometry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set console write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_ConsoleWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_ConsoleWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set division low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_Division {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_Division", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set extend low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_Extend {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_Extend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set file write low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_FileWrite {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_FileWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set jump low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_Jump {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_Jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set large move low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_LargeMove {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_LargeMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set negate low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_Negate {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set shifting low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_Shifting {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_Shifting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:X} is not a recognised signed extension set small move low opcode.
        /// </summary>
        internal static string Processor_Error_Opcode_Low_Signed_SmallMove {
            get {
                return ResourceManager.GetString("Processor_Error_Opcode_Low_Signed_SmallMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to read-only register {0}.
        /// </summary>
        internal static string Processor_Error_Read_Only_Register {
            get {
                return ResourceManager.GetString("Processor_Error_Read_Only_Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag changes:.
        /// </summary>
        internal static string REPL_Changed_Flags_Header {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET.
        /// </summary>
        internal static string REPL_Changed_Flags_Set {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UNSET.
        /// </summary>
        internal static string REPL_Changed_Flags_Unset {
            get {
                return ResourceManager.GetString("REPL_Changed_Flags_Unset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Changed registers:.
        /// </summary>
        internal static string REPL_Changed_Registers_Header {
            get {
                return ResourceManager.GetString("REPL_Changed_Registers_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     {0}: {1} -&gt; {2} (0x{3:X} -&gt; 0x{4:X}).
        /// </summary>
        internal static string REPL_Changed_Registers_Line {
            get {
                return ResourceManager.GetString("REPL_Changed_Registers_Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&gt;&gt;&gt; .
        /// </summary>
        internal static string REPL_Command_Prompt {
            get {
                return ResourceManager.GetString("REPL_Command_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first character of a label cannot be &apos;&amp;&apos;.
        /// </summary>
        internal static string REPL_Error_Label_Ampersand {
            get {
                return ResourceManager.GetString("REPL_Error_Label_Ampersand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A label with the name &quot;{0}&quot; doesn&apos;t exist. Labels must be defined before usage in REPL..
        /// </summary>
        internal static string REPL_Error_Label_Not_Exists {
            get {
                return ResourceManager.GetString("REPL_Error_Label_Not_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssEmbly REPL Environment
        ///
        ///Type an AssEmbly instruction and press ENTER to insert and execute it.
        ///Preface the instruction with one or more spaces to insert it without executing it.
        ///Press ENTER without typing anything to output the state of all registers..
        /// </summary>
        internal static string REPL_Header {
            get {
                return ResourceManager.GetString("REPL_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///{0} bytes of memory remaining.
        /// </summary>
        internal static string REPL_Remaining_Memory {
            get {
                return ResourceManager.GetString("REPL_Remaining_Memory", resourceCulture);
            }
        }
    }
}
